{"version":3,"sources":["Resume/interface.ts","Resume/index.tsx","Resume/i18n/en.ts","Resume/i18n/zh.ts","Code/utils.ts","Code/search-insert.ts","App.tsx","tools.ts","Resume/i18n/index.ts","serviceWorker.ts","index.tsx"],"names":["SectionType","SkillLevel","layoutStyle","display","flexDirection","spaceBetweenStyle","justifyContent","styleConfig","default","small","large","Row","span","children","style","width","Col","Section","props","borderTop","marginTop","paddingTop","paddingBottom","fontSize","lineHeight","EasySection","title","escapeHtml","description","TimeLineSection","stories","map","story","startDate","endDate","company","Resume","className","personalDetail","name","jobTitle","href","phone","email","sections","section","type","easy","timeline","resumeData","judge","assert","alg","args","output","result","console","log","join","searchInsert","nums","target","left","right","length","mid","Math","floor","App","useState","lang","setLang","useEffect","reg","RegExp","r","window","location","search","substr","match","decodeURI","getValueFromLocationSearch","i18nDict","zh","zhResumeData","en","enResumeData","data","i18n","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mIAAYA,EAOAC,E,2FAPAD,K,gBAAAA,E,YAAAA,E,cAAAA,E,qBAAAA,M,cAOAC,K,gBAAAA,E,oBAAAA,E,oBAAAA,E,0BAAAA,E,iBAAAA,M,KCKZ,IAAMC,EAAmC,CACvCC,QAAS,OACTC,cAAe,OAGXC,EAAyC,CAC7CF,QAAS,OACTC,cAAe,MACfE,eAAgB,iBAGZC,EACM,CACRC,QAAS,OACTC,MAAO,OACPC,MAAO,QAILC,EAAwB,SAAC,GAAD,QAC5BC,YAD4B,MACrB,GADqB,EAE5BC,EAF4B,EAE5BA,SAF4B,OAI5B,yBAAKC,MAAK,eAAMZ,EAAN,CAAmBa,MAAM,GAAD,OAAKH,EAAO,GAAK,IAAjB,QAC/BC,IAICG,EAAwB,SAAC,GAAD,QAC5BJ,YAD4B,MACrB,GADqB,EAE5BC,EAF4B,EAE5BA,SAF4B,OAI5B,yBAAKC,MAAK,eACLZ,EADK,CAERE,cAAe,SACfW,MAAM,GAAD,OAAKH,EAAO,GAAK,IAAjB,QAEJC,IAICI,EAAoB,SAAAC,GAAK,OAC7B,6BACEJ,MAAO,CACLK,UAAW,iBACXC,UAAW,OACXC,WAAY,OACZC,cAAe,OACfC,SAAUhB,EAAqBC,QAC/BgB,WAAY,SAGbN,EAAML,WAILY,EAA0C,SAAAP,GAAK,OACnD,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKN,KAAM,GACT,4BAAKM,EAAMQ,QAEb,kBAAC,EAAD,CAAKd,KAAM,IACT,kBAAC,IAAD,CAAee,YAAY,GAAQT,EAAMU,iBAM3CC,EAAkD,SAAAX,GAAK,OAC3D,kBAAC,EAAD,KACE,4BAAKA,EAAMQ,OACVR,EAAMY,QAAQC,KAAI,SAAAC,GAAK,OACtB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKpB,KAAM,GACT,0BACEE,MAAO,CACLS,SAAUhB,EAAqBE,QAGhCuB,EAAMC,UALT,MAKuBD,EAAME,UAG/B,kBAAC,EAAD,CAAKtB,KAAM,IACT,yBAAKE,MAAOT,GACV,4BAAK2B,EAAMN,OACX,4BAAKM,EAAMG,UAEb,kBAAC,IAAD,CAAeR,YAAY,GAAQK,EAAMJ,oBAmCpCQ,EA5BuB,SAAClB,GACrC,OACE,yBAAKmB,UAAU,UACb,gCACE,4BAAKnB,EAAMoB,eAAeC,KAA1B,IAAiCrB,EAAMoB,eAAeE,UACtD,2BACE,uBAAGC,KAAI,cAASvB,EAAMoB,eAAeI,QAClCxB,EAAMoB,eAAeI,OAF1B,OAKE,uBAAGD,KAAI,iBAAYvB,EAAMoB,eAAeK,QACrCzB,EAAMoB,eAAeK,SAI5B,8BACGzB,EAAM0B,SAASb,KAAI,SAAAc,GAAO,MAAI,CAC7BA,EAAQC,OAAS9C,EAAY+C,MAC3B,kBAAC,EAAgBF,GAChBA,EAAQC,OAAS9C,EAAYgD,UAC9B,kBAAC,EAAoBH,UC1HpBI,EAA0B,CACrCX,eAAgB,CACdE,SAAU,qBACVD,KAAM,gBACNI,MAAO,qBACPD,MAAO,mBAETE,SAAU,CAAC,CACTE,KAAM9C,EAAY+C,KAClBrB,MAAO,QACPE,YAAa,uCACZ,CACDkB,KAAM9C,EAAY+C,KAClBrB,MAAO,cACPE,YAAY,wrBCdHqB,EAA0B,CACrCX,eAAgB,CACdE,SAAU,6CACVD,KAAM,qBACNI,MAAO,qBACPD,MAAO,eAETE,SAAU,CAAC,CACTE,KAAM9C,EAAY+C,KAClBrB,MAAO,2BACPE,YAAY,mFAIX,CACDkB,KAAM9C,EAAY+C,KAClBrB,MAAO,eACPE,YAAY,+5BAQX,CACDkB,KAAM9C,EAAYgD,SAClBtB,MAAO,2BACPI,QAAS,CAAC,CACRJ,MAAO,iCACPS,QAAS,2DACTF,UAAW,UACXC,QAAS,eACTN,YAAY,0xCAwBX,CACDF,MAAO,iCACPS,QAAS,2BACTF,UAAW,UACXC,QAAS,UACTN,YAAY,s5BCnElB,IAAMsB,EAAQ,SAACC,EAAaC,GAAkD,IAAD,uBAAhBC,EAAgB,iCAAhBA,EAAgB,kBAC3E,IAAMC,EAASF,EAAG,WAAH,EAAOC,GAClBE,GAAS,EAeb,OAZEA,EADoB,oBAAXJ,EACAA,EAAOG,GAEPH,IAAWG,EAGtBE,QAAQC,IAAR,sCAEOJ,EAAKK,KAAK,aAFjB,qBAGQJ,EAHR,qBAIQC,EAAS,SAAM,SAJvB,2BAOO,ICNHI,EAAe,SAACC,EAAgBC,GAEpC,IAAIC,EAAO,EACPC,EAAQH,EAAKI,OAAS,EACtBC,EAAMC,KAAKC,OAAOL,EAAOC,GAAS,GAEtC,IAAe,IAAXA,EACF,OAAO,EAGT,KAAMD,EAAOC,GAAO,CAClB,GAAIH,EAAKK,KAASJ,EAChB,OAAOI,EACCL,EAAKK,GAAOJ,EACpBE,EAAQE,EAERH,EAAOG,EAAM,EAGfA,EAAMC,KAAKC,OAAOL,EAAOC,GAAS,GAGpC,OAAIH,EAAKE,IAASD,EACTC,EAEAA,EAAO,GAIlBZ,EAAM,EAAGS,EAAc,CAAC,EAAE,EAAE,EAAE,GAAI,GAClCT,EAAM,EAAGS,EAAc,CAAC,GAAI,GAC5BT,EAAM,EAAGS,EAAc,GAAI,GAC3BT,EAAM,EAAGS,EAAc,CAAC,EAAG,EAAG,EAAG,GAAI,GACrCT,EAAM,EAAGS,EAAc,CAAC,GAAI,GCjC5B,IAaeS,EAbO,WAAO,IAAD,EAEFC,mBAAiB,MAFf,mBAEnBC,EAFmB,KAEbC,EAFa,KAQ1B,OALAC,qBAAU,WACR,IAAMF,ECVH,SAAoC/B,GAC1C,IAAMkC,EAAM,IAAIC,OAAJ,eAAmBnC,EAAnB,kBACNoC,EAAIC,OAAOC,SAASC,OAAOC,OAAO,GAAGC,MAAMP,GACjD,OAAS,MAALE,EAAkBC,OAAOK,UAAUN,EAAE,IAElC,KDKSO,CAA2B,SAAW,KACnDX,EAAQD,KACP,IAGD,kBAAC,EEjBU,SAASA,GAEtB,IAAMa,EAAW,CACfC,GAAIC,EACJC,GAAIC,GAGAC,EAAOL,EAAUb,GACvB,OAAKkB,GACIL,EAAQ,GFQHM,CAAKnB,KGRDoB,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASX,MACvB,2DCZNY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.d87dc7aa.chunk.js","sourcesContent":["export enum SectionType {\n  custom = 'custom',\n  easy = 'easy',\n  skill = 'skill',\n  timeline = 'timeline'\n}\n\nexport enum SkillLevel {\n  novice = 'novice',\n  beginner = 'beginner',\n  skillful = 'skillful',\n  experienced = 'experienced',\n  expert = 'expert'\n}\n\nexport interface Story {\n  title: string,\n  company?: string,\n  startDate: string,\n  endDate: string,\n  description: string, // markdown read\n}\n\nexport interface EasySectionProps {\n  type: SectionType.easy,\n  title: string,\n  description: string, // markdown read\n}\n\nexport interface SkillSectionProps {\n  type: SectionType.skill\n  skill: string\n  level?: SkillLevel\n}\n\nexport interface TimeLineSectionProps {\n  type: SectionType.timeline,\n  title: string,\n  stories: Array<Story>\n}\n\nexport interface ResumeProps {\n  personalDetail: {\n    jobTitle: string,\n    name: string,\n    email: string,\n    phone: string,\n  },\n  sections: Array<\n    TimeLineSectionProps | \n    EasySectionProps | \n    SkillSectionProps\n  >\n}\n\nexport interface Layout {\n  span?: number,  // 0-24\n  className?: string,\n  style?: React.CSSProperties\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './style.css';\n\nimport {\n  Layout,\n  EasySectionProps,\n  ResumeProps,\n  SectionType,\n  TimeLineSectionProps\n} from './interface'\n\nconst layoutStyle: React.CSSProperties = { \n  display: 'flex',\n  flexDirection: 'row',\n}\n\nconst spaceBetweenStyle: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between'\n}\n\nconst styleConfig = {\n  fontSize: {\n    default: '14px',\n    small: '12px',\n    large: '24px'\n  }\n}\n\nconst Row: React.FC<Layout> = ({\n  span = 24,\n  children\n}) => (\n  <div style={{...layoutStyle, width: `${span / 24 * 100}%` }}>\n    {children}\n  </div>\n)\n\nconst Col: React.FC<Layout> = ({\n  span = 24,\n  children\n}) => (\n  <div style={{ \n    ...layoutStyle,\n    flexDirection: 'column', \n    width: `${span / 24 * 100}%`,\n  }}>\n    {children}\n  </div>\n)\n\nconst Section: React.FC = props => (\n  <section\n    style={{\n      borderTop: '2px solid #333',\n      marginTop: '10px',\n      paddingTop: '10px',\n      paddingBottom: '20px',\n      fontSize: styleConfig.fontSize.default,\n      lineHeight: '24px'\n    }}\n  >\n    {props.children}\n  </section>\n)\n\nconst EasySection: React.FC<EasySectionProps> = props => (\n  <Section>\n    <Row>\n      <Col span={4}>\n        <h4>{props.title}</h4>\n      </Col>\n      <Col span={20}>\n        <ReactMarkdown escapeHtml={false}>{props.description}</ReactMarkdown>\n      </Col>\n    </Row>\n  </Section>\n)\n\nconst TimeLineSection: React.FC<TimeLineSectionProps> = props => (\n  <Section>\n    <h4>{props.title}</h4>\n    {props.stories.map(story => (\n      <Row>\n        <Col span={4}>\n          <span\n            style={{\n              fontSize: styleConfig.fontSize.small\n            }}\n          >\n            {story.startDate} - {story.endDate}\n          </span>\n        </Col>\n        <Col span={20}>\n          <div style={spaceBetweenStyle}>\n            <h4>{story.title}</h4>\n            <h5>{story.company}</h5>\n          </div>\n          <ReactMarkdown escapeHtml={false}>{story.description}</ReactMarkdown>\n        </Col>\n      </Row>\n    ))}\n</Section>\n)\n\nconst Resume: React.FC<ResumeProps> = (props) => {\n  return (\n    <div className=\"resume\">\n      <header>\n        <h3>{props.personalDetail.name} {props.personalDetail.jobTitle}</h3>\n        <p>\n          <a href={`tel:${props.personalDetail.phone}`}>\n            {props.personalDetail.phone}\n          </a>\n          &nbsp;\n          <a href={`mailto:${props.personalDetail.email}`}>\n            {props.personalDetail.email}\n          </a>\n        </p>\n      </header>\n      <main>\n        {props.sections.map(section => [\n          section.type === SectionType.easy && (\n            <EasySection {...section} />\n          ), section.type === SectionType.timeline && (\n            <TimeLineSection {...section} />\n          )]\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Resume;\n","import {\n  ResumeProps,\n  SectionType\n} from '../interface'\n\nexport const resumeData: ResumeProps = {\n  personalDetail: {\n    jobTitle: 'Front-end Software',\n    name: 'kong lingxing',\n    email: 'konglx90@gmail.com',\n    phone: '+86 17600367421'\n  },\n  sections: [{\n    type: SectionType.easy,\n    title: 'LINKS',\n    description: '[github](http://konglx90.github.io)'\n  }, {\n    type: SectionType.easy,\n    title: 'DESCRIPTION',\n    description: `\n- Three years of front-end development experience, one year of back-end internship experience, familiar with the basic process of front-end development.\n- Independently responsible for developing and launching several complete front-end projects, involving B-side, C-side and applet development, and working with others on RN projects.\n- Have more maintenance experience in front-end projects. The technology stack involves React, Vue, Backbone, jQuery, etc.\n- Have studied computer basics carefully, including data structure, algorithm and network knowledge.\n- The technology stacks for everyday work are React, TypeScript, and Rxjs.\n- Have experience with svelte and Flutter.\n    `\n  }]\n}","import {\n  ResumeProps,\n  SectionType\n} from '../interface'\n\nexport const resumeData: ResumeProps = {\n  personalDetail: {\n    jobTitle: '前端开发工程师',\n    name: '孔令星',\n    email: 'konglx90@gmail.com',\n    phone: '17600367421'\n  },\n  sections: [{\n    type: SectionType.easy,\n    title: '基本信息',\n    description: \n`\n- 教育经历: 电子科技大学(2013-2017)\n`\n  }, {\n    type: SectionType.easy,\n    title: '简介',\n    description: `\n- 三年前端开发经验，一年后端实习经验，熟悉前端开发的基本流程\n- 独立负责开发并上线过数个完整的前端项目，涉及B端、C端和小程序开发，并与他人合作过RN的项目\n- 有较多的前端项目的维护经验，技术栈涉及React、Vue、Backbone、jQuery等\n- 认真学习过计算机基础知识，包括数据结构、算法和网络知识\n- 日常工作的技术栈为React、TypeScript\n- 有过tarojs、svelte等的使用经验\n    `\n  }, {\n    type: SectionType.timeline,\n    title: '工作经历',\n    stories: [{\n      title: '前端工程师',\n      company: '北京云站(原搜狐快站)',\n      startDate: '2018-09',\n      endDate: '至今',\n      description: \n`\n<b>项目介绍</b>: 快站，可视化、零门槛快速建站\n\n<b>公司网站</b>: https://www.kuaizhan.com\n\n<b>kzui</b>: https://kuaizhan.github.io/kzui\n\n<b>技术栈</b>: react、taro、remax、kzui、xqui、typescript等\n\n职责: 负责整个前端开发以及前端团队的搭建和管理工作\n\n1、完善并开源公司自研组件库\\`kzui\\`(基于\\`React\\`).\n\n2、在两年时间内渐进完成前端技术栈的收敛和更新，主要是向React和TypeScript靠拢，模块使用monorepo来管理，制定代码规范和监督执行\n\n3、历史技术栈上的需求，使用svelte生成web component来做跨技术栈的支持.\n\n4、拖拽建小程序系统\n\n5、快客多(小程序电商平台)系统\n\n6、快站插件系统开发优化\n`\n    }, {\n      title: '前端工程师',\n      company: '搜狐快站',\n      startDate: '2017-07',\n      endDate: '2018-09',\n      description: \n`\n<b>项目介绍</b>: 快站B端，主要是快站插件系统、云商店和投票业务。涉及B端管理页面和移动端页面。\n\n<b>技术栈</b>: react、vue、eslint、webpack、gulp、react-native\n\n<b>职责</b>: 负责部分功能的开发和业务维护\n\n1、主要技术栈是React，基于React重构云商店的后台系统\n\n2、eslint 规范的制定 eslint-config-kuaizhan，基于 airbnb 做了些自定义\n\n3、基于vue开发投票C端页面及B端后台\n\n4、基于react-native开发南瓜租房iOS端\n`\n    }]\n  }]\n}","const judge = (assert: any, alg: (...args: any[]) => any, ...args: any[]) => {\n  const output = alg(...args)\n  let result = false\n\n  if (typeof assert === 'function') {\n    result = assert(output)\n  } else {\n    result = assert === output\n  }\n\n  console.log(`\njudge>>>>>>>>>>>>\ninput: ${args.join('\\n       ')}\noutput: ${output}\nresult: ${result ? '✅' : '❌'}\nend=============\n  `)\n  return ''\n}\n\nexport {\n  judge\n}","import { judge } from \"./utils\"\n\n/**\n * 35. 搜索插入位置\n * 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。\n * 你可以假设数组中无重复元素。\n * \n * 输入: [1,3,5,6], 5\n * 输出: 2\n */\n\nconst searchInsert = (nums: number[], target: number) => {\n\n  let left = 0\n  let right = nums.length - 1\n  let mid = Math.floor((left + right) / 2)\n\n  if (right === -1) {\n    return 0\n  }\n\n  while(left < right) {\n    if (nums[mid] === target) {\n      return mid\n    } else if(nums[mid] > target) {\n      right = mid\n    } else {\n      left = mid + 1\n    }\n\n    mid = Math.floor((left + right) / 2)\n  }\n\n  if (nums[left] >= target) {\n    return left\n  } else {\n    return left + 1\n  }\n}\n\njudge(2, searchInsert, [1,3,5,6], 5)\njudge(1, searchInsert, [1], 5)\njudge(0, searchInsert, [], 5)\njudge(0, searchInsert, [1, 3, 4, 5], 0)\njudge(0, searchInsert, [1], 1)\n\n\nexport {\n  searchInsert\n}","import React, { useState, useEffect } from 'react';\nimport Resume from './Resume/index';\nimport i18n from './Resume/i18n';\nimport { getValueFromLocationSearch } from './tools'\n\n// import './Code/two-pointer'\n// import './Code/reverse-string'\n// import './Code/remove-element'\n// import './Code/binary-search'\nimport './Code/search-insert'\n\nconst App: React.FC = () => {\n\n  const [lang, setLang] = useState<string>('zh');\n  useEffect(() => {\n    const lang = getValueFromLocationSearch('lang') || 'zh';\n    setLang(lang)\n  }, [])\n\n  return (\n    <Resume {...i18n(lang)} />\n  );\n}\n\nexport default App;\n","/**\n* 解析url参数\n* @param {String} name 参数名\n* @return {String} 值\n*/\nexport function getValueFromLocationSearch(name: string) {\n const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\n const r = window.location.search.substr(1).match(reg);\n if (r != null) return window.decodeURI(r[2]);\n\n return null;\n}\n","import { resumeData as enResumeData } from './en'\nimport { resumeData as zhResumeData } from './zh'\n\nexport default function(lang: string) {\n\n  const i18nDict = {\n    zh: zhResumeData,\n    en: enResumeData\n  }\n\n  const data = i18nDict[(lang as 'zh' | 'en')]\n  if (!data) {\n    return i18nDict['zh']\n  }\n\n  return data\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}